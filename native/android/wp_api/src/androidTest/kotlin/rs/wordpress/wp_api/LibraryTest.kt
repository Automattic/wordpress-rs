/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package rs.wordpress.wp_api

import org.junit.Before
import org.junit.Test
import uniffi.wp_api.SparsePost
import uniffi.wp_api.RequestMethod
import uniffi.wp_api.WpApiException
import uniffi.wp_api.WpAuthentication
import kotlin.test.assertFailsWith

class LibraryTest {
    private val siteUrl = "_omitted_"
    private val authentication = WpAuthentication.AuthorizationHeader(token = "_omitted_")
    private val library = Library(siteUrl, authentication)

    @Before
    fun setup() {
    }

    @Test
    fun testBasicPostListRequest() {
        val request = library.postListRequest()
        assert(request.method == RequestMethod.GET)
        assert(request.url == "$siteUrl/wp-json/wp/v2/posts?context=edit&page=1&per_page=10")
    }

    @Test
    fun testMakeBasicPostListRequest() {
        val postListResponse = library.makePostListRequest()
        val firstPost: SparsePost = postListResponse.postList!!.first()
        assert(firstPost.title?.raw == "Hello world!")
    }

    @Test
    fun testBasicAuthenticationError() {
        val unauthenticatedLibrary =
            Library(siteUrl, WpAuthentication.AuthorizationHeader("invalid_token"))
        val exception = assertFailsWith<WpApiException.ClientException> {
            unauthenticatedLibrary.makePostListRequest()
        }
        val expectedStatusCode: UShort = 401u
        assert(exception.statusCode == expectedStatusCode)
    }
}
