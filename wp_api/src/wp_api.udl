namespace wp_api {
  [Throws=WPApiError]
  PostListResponse parse_post_list_response(WPNetworkResponse response);
};

enum ClientErrorType {
    "BadRequest",
    "Unauthorized",
    "TooManyRequests",
    "Other",
};

[Error]
interface WPApiError {
    ClientError(ClientErrorType error_type, u16 status_code);
    ServerError(u16 status_code);
    ParsingError(string reason, string response);
    UnknownError();
};

dictionary WPAuthentication {
  string auth_token;
};

enum RequestMethod {
  "GET",
  "POST",
  "PUT",
  "DELETE"
};

interface WPApiHelper {
  constructor(string url, WPAuthentication authentication);
  WPNetworkRequest post_list_request(PostListParams params);
  WPNetworkRequest raw_request(string url);
};

dictionary WPNetworkRequest {
  RequestMethod method;
  string url;
  record<string, string>? header_map;
};

dictionary WPNetworkResponse {
  bytes body;
  u16 status_code;
  record<string, string>? header_map;
};

dictionary PostListResponse {
  sequence<PostObject>? post_list;
  string? next_page;
};
dictionary PostCreateResponse {
  PostObject? post;
};
dictionary PostRetrieveResponse {
  PostObject? post;
};
dictionary PostUpdateResponse {
  PostObject? post;
};
dictionary PostDeleteResponse {
  PostObject? post;
};

dictionary PostObject {
  u32? id;
  string? date;
  string? date_gmt;
  PostGuid? guid;
  string? modified;
  string? modified_gmt;
  string? password;
  string? slug;
  string? status;
  string? link;
  PostTitle? title;
  PostContent? content;
  PostExcerpt? excerpt;
  u32? author;
  u32? featured_media;
  string? comment_status;
  string? ping_status;
  boolean? sticky;
  string? template;
  string? format;
  PostMeta? meta;
  sequence<u32>? categories;
  sequence<u32>? tags;
};

dictionary PostGuid {
  string? raw;
  string? rendered;
};

dictionary PostTitle {
  string? raw;
  string? rendered;
};

dictionary PostContent {
  string? raw;
  string? rendered;
  boolean? protected;
  u32? block_version;
};

dictionary PostExcerpt {
  string? raw;
  string? rendered;
  boolean? protected;
};

dictionary PostMeta {
  string? footnotes;
};

// We should check if it's possible to use the same params for update & create
dictionary PostCreateParams {
  string? title;
  string? content;
};

dictionary PostListParams {
  u32? page  = null;
  u32? per_page = null;
};

dictionary PostRetrieveParams {
  string? password;
};

dictionary PostUpdateParams {
  string? title;
  string? content;
};

dictionary PostDeleteParams {
  boolean? force;
};

// ---------------------------------------------------------------------------

dictionary PageListParams {
  u32? page;
  u32? per_page;
};

dictionary PageListResponse {
  sequence<PageObject>? page_list;
};

dictionary PageObject {
  u32? id;
  string? title;
  string? content;
};
